Object  subclass: #FuzzyLinguistischeVariable  instanceVariableNames: 'varname xmin xmax setliste deFuzzyFlaeche zVarListe orderedSetNames'  classVariableNames: ''  poolDictionaries: '' !!FuzzyLinguistischeVariable class methods! !!FuzzyLinguistischeVariable methods!deFuzzyFlaeche    "Antwortet mit der Fuzzyfläche."    ^deFuzzyFlaeche!deFuzzyFlaeche: aObject    "Notiert die Fuzzyfläche in der linguistischen Variablen."    deFuzzyFlaeche := aObject!neuesSet: aObject    "Erzeugt ein neues FuzzySet und legt es in der setliste ab."    | asetname aset|    setliste isNil                              "Ist Setliste vorhanden? Wenn nein  "        ifTrue: [setliste := Dictionary new].   "dann erzeugen.                     "    aset        := aObject.                     "Die Fuzzyset-Instance in aset.     "    asetname    := aset setname.                "Den Setnamen abrufen und in        "                                                "asetname eintragen.                "    setliste at: asetname put: aset.            "DieFuzzyset-Instance wird unter    "                                                "ihrem Namen im Dictionary setliste "                                                "eingetragen.                       "!neueZVar: aString    "Erzeugt eine neue Zwischenvariable bei der kaskadierung von Regeln."    | avarname avar|    zVarListe isNil        ifTrue: [zVarListe := Dictionary new].    avar        := 0.    avarname    := aString.    zVarListe at: avarname put: avar.!orderedSetNames    "Comment"    ^orderedSetNames!orderedSetNames: aArray    "Reihenfolge der Setnamen.Wie in LingVarDialog eingegeben."    orderedSetNames := aArray!set: aString    "Gibt das Set aus das unter aString in der setliste steht."    ^setliste at: aString!setliste    "Gibt die setliste aus"    ^setliste!varname    "Gibt den namen der Variablen aus."    ^varname!varname: aString    "Trägt den Namen der linguistischen Variablen in die Instance."    varname := aString!xmax    "Antwortet mit dem Maximalen Wert des Wertebereichs."    ^xmax!xmax: anumber    "Eintragen von xmax."    xmax := anumber!xmin   "Antwortet mit dem minimalen Wert des Wertebereichs."    ^xmin!xmin: anumber   "Eintragen von xmin."    xmin := anumber! !