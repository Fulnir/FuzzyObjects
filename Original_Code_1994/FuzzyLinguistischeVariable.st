FuzzyObjects                  name: #FuzzyLinguistischeVariable           superclass: Environment@#Object           properties: 0x1000             category: #'Kernel-Object'   classVariableNames: nilinstanceVariableNames: {'varname'. 'xmin'. 'xmax'. 'setliste'. 'deFuzzyFlaeche'. 'zVarListe'. 'orderedSetNames'}  sharedVariableNames: nil           namespaces: nil   structureTemplates: nil   defaultStorageSize: 0!FuzzyObjects@#FuzzyLinguistischeVariable compileMethodSource: ('deFuzzyFlaeche    "Antwortet mit der Fuzzyfläche."    ^deFuzzyFlaeche')!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #deFuzzyFlaeche) protocolCategory: 'getter'.!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #deFuzzyFlaeche) description: ('Antwortet mit der Fuzzyfläche.').!FuzzyObjects@#FuzzyLinguistischeVariable compileMethodSource: ('deFuzzyFlaeche: aObject    "Notiert die Fuzzyfläche in der linguistischen Variablen."    deFuzzyFlaeche := aObject')!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #deFuzzyFlaeche:) protocolCategory: 'setter'.!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #deFuzzyFlaeche:) description: ('Notiert die Fuzzyfläche in der linguistischen Variablen.').!FuzzyObjects@#FuzzyLinguistischeVariable compileMethodSource: ('neuesSet: aObject    "Erzeugt ein neues FuzzySet und legt es in der setliste ab."    | asetname aset|    setliste isNil                              "Ist Setliste vorhanden? Wenn nein  "        ifTrue: [setliste := Dictionary new].   "dann erzeugen.                     "    aset        := aObject.                     "Die Fuzzyset-Instance in aset.     "    asetname    := aset setname.                "Den Setnamen abrufen und in        "                                                "asetname eintragen.                "    setliste at: asetname put: aset.            "DieFuzzyset-Instance wird unter    "                                                "ihrem Namen im Dictionary setliste "                                                "eingetragen.                       "')!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #neuesSet:) description: ('Erzeugt ein neues FuzzySet und legt es in der setliste ab.').!FuzzyObjects@#FuzzyLinguistischeVariable compileMethodSource: ('neueZVar: aString    "Erzeugt eine neue Zwischenvariable bei der kaskadierung von Regeln."    | avarname avar|    zVarListe isNil        ifTrue: [zVarListe := Dictionary new].    avar        := 0.    avarname    := aString.    zVarListe at: avarname put: avar.')!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #neueZVar:) description: ('Erzeugt eine neue Zwischenvariable bei der kaskadierung von Regeln.').!FuzzyObjects@#FuzzyLinguistischeVariable compileMethodSource: ('orderedSetNames    "Comment"    ^orderedSetNames')!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #orderedSetNames) protocolCategory: 'getter'.!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #orderedSetNames) description: ('Comment').!FuzzyObjects@#FuzzyLinguistischeVariable compileMethodSource: ('orderedSetNames: aArray    "Reihenfolge der Setnamen.Wie in LingVarDialog eingegeben."    orderedSetNames := aArray')!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #orderedSetNames:) protocolCategory: 'setter'.!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #orderedSetNames:) description: ('Reihenfolge der Setnamen.Wie in LingVarDialog eingegeben.').!FuzzyObjects@#FuzzyLinguistischeVariable compileMethodSource: ('set: aString    "Gibt das Set aus das unter aString in der setliste steht."    ^setliste at: aString')!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #set:) description: ('Gibt das Set aus das unter aString in der setliste steht.').!FuzzyObjects@#FuzzyLinguistischeVariable compileMethodSource: ('setliste    "Gibt die setliste aus"    ^setliste')!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #setliste) protocolCategory: 'getter'.!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #setliste) description: ('Gibt die setliste aus').!FuzzyObjects@#FuzzyLinguistischeVariable compileMethodSource: ('varname    "Gibt den namen der Variablen aus."    ^varname')!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #varname) protocolCategory: 'getter'.!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #varname) description: ('Gibt den namen der Variablen aus.').!FuzzyObjects@#FuzzyLinguistischeVariable compileMethodSource: ('varname: aString    "Trägt den Namen der linguistischen Variablen in die Instance."    varname := aString')!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #varname:) protocolCategory: 'setter'.!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #varname:) description: ('Trägt den Namen der linguistischen Variablen in die Instance.').!FuzzyObjects@#FuzzyLinguistischeVariable compileMethodSource: ('xmax    "Antwortet mit dem Maximalen Wert des Wertebereichs."    ^xmax')!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #xmax) protocolCategory: 'getter'.!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #xmax) description: ('Antwortet mit dem Maximalen Wert des Wertebereichs.').!FuzzyObjects@#FuzzyLinguistischeVariable compileMethodSource: ('xmax: anumber    "Eintragen von xmax."    xmax := anumber')!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #xmax:) protocolCategory: 'setter'.!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #xmax:) description: ('Eintragen von xmax.').!FuzzyObjects@#FuzzyLinguistischeVariable compileMethodSource: ('xmin   "Antwortet mit dem minimalen Wert des Wertebereichs."    ^xmin')!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #xmin) protocolCategory: 'getter'.!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #xmin) description: ('Antwortet mit dem minimalen Wert des Wertebereichs.').!FuzzyObjects@#FuzzyLinguistischeVariable compileMethodSource: ('xmin: anumber   "Eintragen von xmin."    xmin := anumber')!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #xmin:) protocolCategory: 'setter'.!(FuzzyObjects@#FuzzyLinguistischeVariable instanceMethodFor: #xmin:) description: ('Eintragen von xmin.').!